use SITUATIE;
select count(Taxa) as Numar_studenti from Note
	where Taxa is not null;
select sum(Taxa) as Suma_taxelor from Note;
select sum(Taxa) as Suma_taxelor from Student inner join Note on Student.CodS=Note.CodS
	where Student.Nume = 'Radu' and Student.Prenume = 'Tiberiu';
select avg(Taxa) as Media_taxelor from Note;
select Student.Nume, count(Nota) as Numar from Student INNER JOIN [Note] on Student.CodS=Note.CodS
	group by Student.Nume;
select sum(Taxa) as Suma_taxelor, avg(Taxa) as Media_taxelor from Student inner join Note on Student.CodS=Note.CodS;
select avg(Taxa) as Valoarea_medie_a_taxelor_Radu_Tiberiu from Note inner join Student on Note.CodS=Student.CodS 
	where Student.Nume='Radu' and Student.Prenume='Tiberiu';
select  distinct top 1 with TIES Student.nume, Student.prenume, Note.Taxa as Max_taxa from Student INNER JOIN [Note] on Student.CodS = Note.CodS
	order by Taxa desc;
select *,Taxa*1.19 as Taxa_cu_TVA from Note;
select Nume, Prenume, avg(Taxa) as Medie_taxe from Student INNER JOIN [Note] on Student.CodS = Note.CodS
	group by Nume,Prenume
	order by Medie_taxe desc;
select top 1 Student.Nume, Student.Prenume, avg(Note.Nota) as Media_notelor from Student INNER JOIN [Note] on Student.CodS = Note.CodS
	group by Student.Nume, Student.Prenume
	order by avg(Note.Nota) desc;
select Nume, Prenume, avg(Taxa) as Medie_taxe from Student INNER JOIN [Note] on Student.CodS = Note.CodS
	where Taxa is not null
	group by Nume,Prenume
	order by Medie_taxe desc;
/*
a) select manager_id from employees
	group by manager_id
	having avg(salary)<5600;

b) select cd_number, count(title) from d_cds
		where cd_number < 93
		group by cd_number;

c) select ID, max(ID), artist as Artist from d_songs
		where duration in('3 min', '6 min', '10 min')
		group by ID, artist
		having ID < 50;

d) select loc_type, rental_fee as Fee from d_venues
		where id <100
		group by loc_type, rental_fee
		order by 2;
*/







































































FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
WHERE NOTE.TAXA IS NOT NULL;

3.	SĂ SE AFIŞEZE ÎNTR-O COLOANĂ NUMITĂ “SUMA_TAXELOR” SUMA TOTALĂ PLĂTITĂ DE CĂTRE STUDENTUL RADU TIBERIU

USE  <NUME_BAZA_DE_DATE>
SELECT SUM(NOTE.TAXA) AS SUMA_TAXELOR
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
WHERE  NOTE.TAXA IS NOT NULL AND STUDENT.NUME = 'RADU' AND STUDENT.PRENUME = 'TIBERIU';

4.	SĂ SE AFIŞEZE ÎNTR-O COLOANĂ NUMITĂ “MEDIA_TAXELOR” VALOAREA MEDIE A TAXELOR PLĂTITE DE CĂTRE STUDENŢI 

USE  <NUME_BAZA_DE_DATE>
SELECT AVG(NOTE.TAXA) AS MEDIA_TAXELOR
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
WHERE NOTE.TAXA IS NOT NULL ;

5.	SĂ SE AFIŞEZE ÎNTR-O COLOANĂ NUMITĂ “NUMAR”CÂTE NOTE ARE FIECARE STUDENT 

USE  <NUME_BAZA_DE_DATE>
SELECT STUDENT.NUME, COUNT(NOTA) AS NUMAR
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS=NOTE.CODS
GROUP BY STUDENT.NUME;


6.	SĂ SE AFIŞEZE ÎNTR-O COLOANĂ NUMITĂ “SUMA_TAXELOR” SUMA TAXELOR PLĂTITE DE CĂTRE TOŢI STUDENŢII ŞI ÎN COLOANA NUMITĂ “MEDIA_TAXELOR” VALOAREA MEDIE A TAXELOR PLĂTITE DE CĂTRE ACEŞTIA?

USE  <NUME_BAZA_DE_DATE>
SELECT COUNT(*) AS SUMA_TAXELOR, AVG(NOTE.TAXA) AS MEDIA_TAXELOR
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
WHERE NOTE.TAXA IS NOT NULL ;

7.	SĂ SE AFLE VALOAREA MEDIE A TAXELOR PLĂTITE DE STUDENTUL RADU TIBERIU

USE  <NUME_BAZA_DE_DATE>
SELECT AVG(NOTE.TAXA) AS MEDIA_TAXELOR
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
WHERE NOTE.TAXA IS NOT NULL AND STUDENT.NUME = 'RADU' AND STUDENT.PRENUME = 'TIBERIU';

8.	SĂ SE AFIŞEZE CINE A PLĂTIT CEA MAI MARE TAXĂ, ÎN AŞA FEL ÎNCÂT STUDENTUL RESPECTIV SĂ APARĂ O SINGURĂ DATĂ? 

USE  <NUME_BAZA_DE_DATE>
SELECT  DISTINCT TOP 1 WITH TIES STUDENT.NUME, STUDENT.PRENUME, NOTE.TAXA AS MAX_TAXA
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
ORDER BY TAXA DESC;

9.	SĂ SE AFIŞEZE UN CÂMP SEPARAT ÎN CARE TAXA SĂ CONŢINĂ ŞI TVA ŞI CARE SĂ SE NUMEASCĂ “TAXA_CU_TVA”

USE  <NUME_BAZA_DE_DATE>
SELECT NOTE.*, TAXA*1.19 AS TAXA_CU_TVA, *
FROM [NOTE];

10.	SĂ SE AFIŞEZE NUMELE, PRENUMELE ŞI MEDIA TAXEKOR PLĂTITE DE CĂTRE FIECARE STUDENT ÎNTR-UN CÂMP CARE SĂ SE NUMEASCĂ “MEDIE_TAXE”? 

USE  <NUME_BAZA_DE_DATE>
SELECT STUDENT.NUME, STUDENT.PRENUME, AVG(NOTE.TAXA) AS MEDIE_TAXE
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
ORDER BY TAXA DESC;

11.	SĂ SE AFIŞEZE STUDENTUL CU CEA MAI MARE MEDIE 

USE  <NUME_BAZA_DE_DATE>
SELECT TOP 1 STUDENT.NUME, STUDENT.PRENUME, AVG(NOTE.NOTA) AS MEDIA_NOTELOR
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
GROUP BY STUDENT.NUME, STUDENT.PRENUME
ORDER BY AVG(NOTE.NOTA) DESC;

12.	SĂ SE AFIŞEZE NUMELE, PRENUMELE ŞI MEDIA TAXEKOR PLĂTITE DE CĂTRE FIECARE STUDENT ÎNTR-UN CÂMP CARE SĂ SE NUMEASCĂ “MEDIE_TAXE”, DAR ÎN REZULTAT NU TREBUIE SĂ APARĂ STUDENŢII CARE NU AU TAXE 

USE  <NUME_BAZA_DE_DATE>
SELECT STUDENT.NUME, STUDENT.PRENUME, AVG(NOTE.TAXA) AS MEDIE_TAXE
FROM STUDENT INNER JOIN [NOTE] ON STUDENT.CODS = NOTE.CODS
GROUP BY STUDENT.NUME, STUDENT.PRENUME
HAVING AVG(NOTE.TAXA) IS NOT NULL

13.	FIECARE DINTRE URMĂTOARELE INTEROGĂRI SQL CONŢINE O EROARE.  CORECTAŢI ERORILE.
a.	
SELECT MANAGER_ID
FROM EMPLOYEES
WHERE AVG(SALARY) <16000
GROUP BY MANAGER_ID;

SELECT MANAGER_ID
FROM EMPLOYEES
GROUP BY MANAGER_ID
HAVING AVG(SALARY)<5600

b.	
SELECT CD_NUMBER, COUNT(TITLE)
FROM D_CDS
WHERE CD_NUMBER < 93;

SELECT CD_NUMBER, COUNT(TITLE)
FROM D_CDS
WHERE CD_NUMBER < 93
GROUP BY CD_NUMBER;

c.	
SELECT ID, MAX(ID), ARTIST AS ARTIST
FROM D_SONGS
WHERE DURATION IN('3 MIN', '6 MIN', '10 MIN')
HAVING ID < 50
GROUP BY ID;

SELECT ID, MAX(ID), ARTIST AS ARTIST
FROM D_SONGS
WHERE DURATION IN('3 MIN', '6 MIN', '10 MIN')
GROUP BY ID, ARTIST
HAVING ID < 50;

d.	
SELECT LOC_TYPE, RENTAL_FEE AS FEE
FROM D_VENUES
WHERE ID <100
GROUP BY "FEE"
ORDER BY 2;

SELECT LOC_TYPE, RENTAL_FEE AS FEE
FROM D_VENUES
WHERE ID <100
GROUP BY LOC_TYPE, RENTAL_FEE
ORDER BY 2;